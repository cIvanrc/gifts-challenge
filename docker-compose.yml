version: '3.7'
volumes:
  dbdata:
services:
  db:
    image: postgres:13.1
    hostname: postgres
    ports:
      - "5432:5432"
    volumes:
      - 'dbdata:/var/lib/postgresql/data'
  # The job processor container - we'll use this as a base for the rest of the
  # containers:
  test: &app
    build:
      context: .
      dockerfile: Dockerfile
      args:
      - DEVELOPER_UID=${UID:-1000}
      - DEVELOPER_USER=${USER:-you}
    volumes:
      - .:/app
    stdin_open: true
    tty: true

    depends_on:
      - db

    # Specify environment variables available for our app containers. We'll leave
    # a YML anchor in case we need to override or add more variables if needed on
    # each app container:
    environment: &app_environment
      JWT_SECRET: ${JWT_SECRET:-SOME_JWT}
      DATABASE_HOST_URL: ${DATABASE_HOST}
      DATABASE_USERNAME: ${DATABASE_USERNAME:-apptegy}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-apptegy}

      # We'll set the RAILS_ENV and RACK_ENV environment variables to
      # 'development', so our app containers will start in 'development' mode
      # on this compose project:
      RAILS_ENV: test
      RACK_ENV: test
      RAILS_LOG_TO_STDOUT: "true"


  api:
    <<: *app
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    environment:
      <<: *app_environment
      RAILS_ENV: development
      RACK_ENV: development
    ports:
      - "3000:3000"
